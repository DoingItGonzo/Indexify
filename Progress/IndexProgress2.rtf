{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import java.io.*;\
import java.util.ArrayList;\
import java.util.HashMap;\
import java.util.Map.Entry;\
import java.text.*;\
\
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;\
import org.apache.poi.xwpf.usermodel.XWPFDocument;\
import org.apache.poi.xwpf.usermodel.XWPFParagraph;\
import org.apache.poi.xwpf.usermodel.XWPFRun;\
\
\
\
public class Indexing \{\
	\
	static HashMap<String, ArrayList<Integer>> theIndex;\
	\
	// May be able to pull page number from the DOCUMENT ITSELF\
	static Integer wordCount;\
	static Integer lineCount;\
	\
	\
	// May be better to use static variable FOR FILE instead of creating it in fileOutput(). Not sure\
	static File returndFile;\
	\
	\
	\
	@SuppressWarnings("rawtypes")\
	public static void main (String[] args) throws IOException \{\
		\
		\
		String testIt = "I, Harold Lauder";\
				//am doing this of my own free will. One cannot gain understanding by stopping a process. One must flow with it. Failure to see this will place one in the cage in their own head, constantly overwhelmed and scarcely enlightened by experience. Hello, my name is Jim. I\'92m the fucking man, because my life is dope and I do dope shit.  Haters gonna hate.Failure is not an option they say, but I fail every day. Sweet is my undoing. Sweet is my collapse. With destruction, there would be no need to build. What is life without the building?";\
		dataProcessing(testIt);\
		System.out.println(theIndex.get("Harold"));\
		\
		\
		//\
		// It's pulling the text fine. The issue is w/ dataProcessing and indexAddition\
		// NullPointerException\
		//\
		\
//		wordCount = 0;\
//        returndFile = new File("/Users/travispettrey/Documents/TestingDoc.docx");\
//		String theText = fileInput(returndFile);\
//		System.out.println(theText);\
//		dataProcessing(theText);\
		\
		\
//		java.util.Iterator<Entry<String, ArrayList<Integer>>> it = theIndex.entrySet().iterator();\
//		while (it.hasNext()) \{\
//			HashMap.Entry entry = (HashMap.Entry)it.next();\
//			System.out.println(entry.getKey() + ", " + entry.getValue());\
//		\}\
		\
//		String[] dicks = \{"howdy", "motha", "fucker"\};\
//		fileOutput(dicks);\
//		theIndex = new HashMap<String, ArrayList<Integer>>();\
//		ArrayList<String> test = new ArrayList<>();\
//		test.add("Wolf");\
//		test.add("BowWow");\
//		test.add("Bark");\
//		test.add("Bark");\
//		wordCount = 0;\
//		for (String ballz: test) \{\
//			indexAddition(ballz);\
//			wordCount++;\
//		\} java.util.Iterator<Entry<String, ArrayList<Integer>>> it = theIndex.entrySet().iterator();\
//		while (it.hasNext()) \{\
//			HashMap.Entry entry = (HashMap.Entry)it.next();\
		//	System.out.println(entry.getKey() + ", " + entry.getValue());\
		//\}\
	\}\
	\
	\
	//\
	// Getting NullPointerException\
	//\
	public static void dataProcessing(String allText) \{\
		String oneWord = "";\
		final CharacterIterator it = new StringCharacterIterator(allText);\
		for(char c = it.first(); c != CharacterIterator.DONE; c = it.next()) \{\
			if (Character.isLetter(c)) \{\
				oneWord += c;\
			\}\
			if ((!Character.isLetter(c)) && oneWord.length() > 0) \{\
				wordCount++;\
				indexAddition(oneWord);\
				oneWord = "";\
			\}\
			else \{\
				continue;\
			\}\
		\}\
	\}\
	\
	\
	//\
	// Getting NullPointerException\
	//\
	public static void indexAddition (String fileString) \{\
		if (!theIndex.containsKey(fileString)) \{\
			ArrayList<Integer> insides = new ArrayList<>();\
			insides.add(wordCount);\
			theIndex.put(fileString, insides);\
		\} else \{\
			theIndex.get(fileString).add(wordCount);\
		\}\
	\}\
	\
	\
\
	@SuppressWarnings("resource")\
	public static String fileInput(File file) \{\
		String allText = "";\
	        try \{\
	            FileInputStream fis = new FileInputStream(file.getAbsolutePath());\
	            XWPFDocument document = new XWPFDocument(fis);\
	            XWPFWordExtractor extractor = new XWPFWordExtractor(document);\
	            allText = extractor.getText();\
	        \} catch (Exception exep) \{\
	            exep.printStackTrace();\
	        \}\
            return allText;\
	\}\
	\
	\
	\
	public static void fileOutput (String[] words) throws IOException \{\
		XWPFDocument document = new XWPFDocument();\
		XWPFParagraph tmpParagraph = document.createParagraph();\
		XWPFRun tmpRun = tmpParagraph.createRun();\
		for (String word: words) \{\
		tmpRun.setText(word);\
		tmpRun.setFontSize(18);\
		\}\
		File file = new File("/Users/travispettrey/Documents/returndFile.docx");\
		document.write(new FileOutputStream(file));\
		document.close();\
	\}\
	\
\}}